using MalwarebytesService;
using Microsoft.Extensions.Logging.Configuration;
using Microsoft.Extensions.Logging.EventLog;
using NLog.Extensions.Logging;

internal class Program
{
    private static async Task Main(string[] args)
    {
        IHost host = Host.CreateDefaultBuilder(args)
                    .UseWindowsService(options =>
                    {
                        options.ServiceName = "FolderWatch Service";
                    })
                    .ConfigureServices((context, services) =>
                    {
                        LoggerProviderOptions.RegisterProviderOptions<
                            EventLogSettings, EventLogLoggerProvider>(services);

                        services.AddSingleton<FileSystemWatcherService>();
                        services.AddHostedService<WindowsBackgroundService>();
                    })
                    .ConfigureLogging((context, logging) =>
                    {
                        // See: https://github.com/dotnet/runtime/issues/47303
                        logging.ClearProviders();
                        logging.SetMinimumLevel(Microsoft.Extensions.Logging.LogLevel.Trace);
                        //logging.AddConfiguration(context.Configuration.GetSection("Logging"));
                        logging.AddNLog(context.Configuration, new NLogProviderOptions() { LoggingConfigurationSectionName = "NLog" });
                    })
                    .Build();

        await host.RunAsync();

    }
}